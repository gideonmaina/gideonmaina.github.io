---
import { AstroSeo } from "@astrolib/seo";
import { Schema } from "astro-seo-schema";
import { Fragment } from "astro/jsx-runtime";

const siteName = "Gideon Maina";
const siteUrl = "https://gideonmaina.me";
const authorName = "Gideon Maina";
const profileImage = `${siteUrl}/profile.jpg`;

const {
  title,
  description = `${authorName} - A passionate full-stack developer, creative thinker, and problem solver building digital experiences that make a difference.`,
  image = "/og-image.jpg",
  url = Astro.url.href,
  type = "website",
  publishedTime,
  modifiedTime,
  author,
  keywords,
  noindex = false,
  nofollow = false,
} = Astro.props;

const fullTitle = `${authorName} | ${title}`;

const seoConfig = {
  title: fullTitle,
  description,
  canonical: url,
  noindex,
  nofollow,
  openGraph: {
    type: type === "article" ? "article" : "website",
    url,
    title: fullTitle,
    description,
    images: [
      {
        url: image,
        width: 1200,
        height: 630,
        alt: title,
      },
    ],
    site_name: siteName,
    ...(type === "article" && {
      article: {
        publishedTime,
        modifiedTime,
        authors: [author || authorName],
      },
    }),
  },
  twitter: {
    card: "summary_large_image",
    creator: "@gideon_maina",
    site: "@gideon_maina",
  },
  additionalMetaTags: [
    { name: "author", content: authorName },
    { name: "theme-color", content: "#1f2937" },
    ...(keywords ? [{ name: "keywords", content: keywords }] : []),
  ],
  additionalLinkTags: [
    { rel: "icon", type: "image/svg+xml", href: "/favicon.svg" },
    { rel: "icon", type: "image/x-icon", href: "/favicon.ico" },
    {
      rel: "apple-touch-icon",
      sizes: "180x180",
      href: "/apple-touch-icon.png",
    },
  ],
};
---

<head lang="en">
  <!-- âœ… UTF-8 Fix for emoji rendering -->
  <meta charset="UTF-8" />

  <!-- Responsive -->
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  <!-- SEO meta -->
  <AstroSeo {...seoConfig} />

  <!-- Structured Data for Person -->
  <Schema
    item={{
      "@context": "https://schema.org",
      "@type": "Person",
      name: authorName,
      url: siteUrl,
      image: profileImage,
      jobTitle: "Full-Stack Developer",
      description,
      sameAs: [
        "https://github.com/gideonmaina",
        "https://linkedin.com/in/gideonmaina",
        "https://twitter.com/gideonmaina",
      ],
      knowsAbout: [
        "Web Development",
        "JavaScript",
        "TypeScript",
        "React",
        "Vue.js",
        "Astro",
        "Node.js",
        "Python",
        "Full-Stack Development",
      ],
      address: {
        "@type": "PostalAddress",
        addressCountry: "Kenya",
      },
      alumniOf: {
        "@type": "Organization",
        name: "Jomo Kenyatta University of Agriculture and Technology",
      },
    }}
  />

  {
    type === "article" && (
      <Fragment>
        <Schema
          item={{
            "@context": "https://schema.org",
            "@type": "Article",
            headline: title,
            description,
            image,
            datePublished: publishedTime,
            dateModified: modifiedTime || publishedTime,
            author: {
              "@type": "Person",
              name: author || authorName,
              url: siteUrl,
            },
            publisher: {
              "@type": "Person",
              name: authorName,
              url: siteUrl,
            },
            mainEntityOfPage: {
              "@type": "WebPage",
              "@id": url,
            },
          }}
        />
      </Fragment>
    )
  }

  {
    type === "website" && (
      <Fragment>
        <Schema
          item={{
            "@context": "https://schema.org",
            "@type": "WebSite",
            name: siteName,
            url: siteUrl,
            description,
            author: {
              "@type": "Person",
              name: authorName,
            },
            potentialAction: {
              "@type": "SearchAction",
              target: `${siteUrl}/search?q={search_term_string}`,
              "query-input": "required name=search_term_string",
            },
          }}
        />
      </Fragment>
    )
  }

  <!-- Font Awesome -->
  <link
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
    rel="stylesheet"
  />

  <!-- Manifest -->
  <link rel="manifest" href="/site.webmanifest" />
  <meta name="theme-color" content="#a592a3" />
</head>
